version: "2"
services:
  apache:
    image: eeacms/apache:2.4-2.1-alpine
    labels:
      io.rancher.scheduler.affinity:host_label: "${HOST_LABELS}"
      io.rancher.scheduler.affinity:host_label_ne: reserved=yes
    links:
    - varnish
    environment:
      APACHE_MODULES: "${APACHE_MODULES}"
      APACHE_CONFIG: "${APACHE_CONFIG}"
    volumes:
    - {{ .Values.VOLUME_PREFIX }}land_downloads:/downloads

  varnish:
    image: eeacms/varnish-copernicus-land:1.0
    labels:
      io.rancher.scheduler.affinity:host_label: "${HOST_LABELS}"
      io.rancher.scheduler.affinity:host_label_ne: reserved=yes
    environment:
      VARNISH_BACKEND_HOST: haproxy
      VARNISH_BACKEND_PORT: '5000'
      VARNISH_MEMORY: 2G
      LOGSPOUT: "ignore"
    links:
    - haproxy

  haproxy:
    image: eeacms/haproxy:1.7-4.1
    labels:
      io.rancher.scheduler.affinity:host_label: "${HOST_LABELS}"
      io.rancher.scheduler.affinity:host_label_ne: reserved=yes
    ports:
    - "1936:1936"
    links:
    - plone
    environment:
      TZ: "${TZ}"
      BACKENDS: "plone"
      BACKENDS_PORT: "8080"
      DNS_ENABLED: "true"
      TIMEOUT_SERVER: "180000"
      TIMEOUT_CLIENT: "180000"
      STATS_AUTH: "${HAPROXY_STATS_AUTH}"

  memcached:
    image: memcached:1
    labels:
      io.rancher.scheduler.affinity:host_label: "${HOST_LABELS}"
      io.rancher.scheduler.affinity:host_label_ne: reserved=yes
    environment:
      TZ: "${TZ}"
    command:
    - -m
    - "2048"

  postfix:
    image: eeacms/postfix:eionet
    labels:
      io.rancher.scheduler.affinity:host_label: "${HOST_LABELS}"
      io.rancher.scheduler.affinity:host_label_ne: reserved=yes
    environment:
      TZ: "${TZ}"
      MTP_HOST: "eea.europa.eu"

  plone:
    image: eeacms/plone-copernicus-land:18.9.14-2.44
    labels:
      io.rancher.scheduler.affinity:host_label: "${HOST_LABELS}"
      io.rancher.scheduler.affinity:host_label_ne: reserved=yes
    links:
    - zeoserver
    - memcached
    - postfix
    environment:
      TZ: "${TZ}"
      ZOPE_MODE: "zeo_client"
      LAND_DOWNLOADS_SRC_PATH: /data/downloads/landfiles/src/
      LAND_DOWNLOADS_DST_PATH: /data/downloads/landfiles/dst/
      LAND_DOWNLOADS_STATIC_PATH: "${LAND_DOWNLOADS_STATIC_PATH}"
      SENTRY_DSN: "${SENTRY_DSN}"
    volumes:
    - {{ .Values.VOLUME_PREFIX }}land_downloads:/data/downloads

  async:
    image: eeacms/plone-copernicus-land:18.9.14-2.44
    labels:
      io.rancher.scheduler.affinity:host_label: "${HOST_LABELS}"
      io.rancher.scheduler.affinity:host_label_ne: reserved=yes
    links:
    - zeoserver
    - memcached
    - postfix
    environment:
      TZ: "${TZ}"
      ZOPE_MODE: "zeo_async"
      LAND_DOWNLOADS_SRC_PATH: /data/downloads/landfiles/src/
      LAND_DOWNLOADS_DST_PATH: /data/downloads/landfiles/dst/
      LAND_DOWNLOADS_STATIC_PATH: "${LAND_DOWNLOADS_STATIC_PATH}"
      SENTRY_DSN: "${SENTRY_DSN}"
    volumes:
    - {{ .Values.VOLUME_PREFIX }}land_downloads:/data/downloads

  zeoserver:
    image: plone/zeoserver:2.13.23-alpine
    labels:
      io.rancher.scheduler.affinity:host_label: "${HOST_LABELS}"
      io.rancher.scheduler.affinity:host_label_ne: reserved=yes
    volumes:
    - {{ .Values.VOLUME_PREFIX }}land_data:/data
    environment:
      TZ: "${TZ}"

  sync-proxy:
    image: nginx:1.13-alpine
    labels:
      io.rancher.scheduler.affinity:host_label: "${HOST_LABELS}"
      io.rancher.scheduler.affinity:host_label_ne: reserved=yes
    environment:
      TZ: "Europe/Copenhagen"
      NGINX_CONF: "${SYNC_PROXY_CONFIG}"
    command:
      - /bin/sh
      - -c
      - 'echo $$NGINX_CONF > /etc/nginx/conf.d/default.conf && exec nginx -g "daemon off;"'
    restart: "always"


  landfiles-sync:
    image: eeacms/copernicus-land-scripts:sync-1.1
    labels:
      io.rancher.scheduler.affinity:host_label: "${HOST_LABELS}"
      io.rancher.scheduler.affinity:host_label_ne: reserved=yes
      io.rancher.container.start_once: "true"
      cron.schedule: "0 0 0 * * ?"
    environment:
      TZ: "${TZ}"
      SOURCE_DIRECTORY: "${SYNC_REMOTE_PATH}"
      TARGET_DIRECTORY: "${SYNC_TARGET_PATH}"
      RCLONE_CONFIG_REMOTE_URL: "${SYNC_REMOTE_URL}"
    volumes:
    - {{ .Values.VOLUME_PREFIX }}land_downloads:/downloads

  landfiles-cleanup:
    image: eeacms/copernicus-land-scripts:cleanup-1.0
    labels:
      io.rancher.scheduler.affinity:host_label: "${HOST_LABELS}"
      io.rancher.scheduler.affinity:host_label_ne: reserved=yes
      io.rancher.container.start_once: "true"
      cron.schedule: "0 0 0 * * ?"
    environment:
      TZ: "${TZ}"
      TARGET_DIRECTORY: /downloads/landfiles/dst/
    volumes:
    - {{ .Values.VOLUME_PREFIX }}land_downloads:/downloads


  elasticsearch:
      labels:
          io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
          io.rancher.container.hostname_override: container_name
          io.rancher.scheduler.affinity:host_label: ${host_labels_elastic}
      image: eeacms/elastic:6.5-1.0
      environment:
          - "cluster.name=${cluster_name}"
          - "node.name=$${HOSTNAME}"
          - "bootstrap.memory_lock=true"
          - "ES_JAVA_OPTS=-Xms${elastic_heap_size} -Xmx${elastic_heap_size}"
          - "node.master=true"
          - "node.data=true"
          - "http.enabled=true"
          - "ENABLE_READONLY_REST=${ENABLE_READONLY_REST}"
          - "TZ=${TZ}"
          {{- if eq .Values.ENABLE_READONLY_REST "true" }}
          - "RW_USER=${RW_USER}"
          - "RO_USER=${RO_USER}"
          - "RW_PASSWORD=${RW_PASSWORD}"
          - "RO_PASSWORD=${RO_PASSWORD}"
          {{- end}}
  {{- if (.Values.ES_CLIENT_PORT)}}
      ports:
          - "${ES_CLIENT_PORT}:9200"
  {{- end}}
      ulimits:
          memlock:
              soft: -1
              hard: -1
          nofile:
              soft: 65536
              hard: 65536
      mem_limit: ${elastic_mem_limit}
      mem_reservation: ${elastic_mem_reservation}
      mem_swappiness: 0
      cap_add:
          - IPC_LOCK
      volumes:
          - es-data:/usr/share/elasticsearch/data

  cluster-health:
      image: eeacms/esclusterhealth:1.1
      depends_on:
          - elasticsearch
      labels:
        io.rancher.container.hostname_override: container_name
        io.rancher.scheduler.affinity:host_label: ${host_labels_elastic}
      mem_limit: 64m
      mem_reservation: 8m
      environment:
          - ES_URL=http://elasticsearch:9200
          - PORT=12345
          - ES_USER=${RO_USER}
          - "ES_PASSWORD=${RO_PASSWORD}"

  {{- if eq .Values.UPDATE_SYSCTL "true" }}
  es-sysctl:
      labels:
          io.rancher.scheduler.global: 'true'
          io.rancher.scheduler.affinity:host_label: ${host_labels_elastic}
          io.rancher.container.start_once: false
      network_mode: none
      image: rawmind/alpine-sysctl:0.1
      privileged: true
      mem_limit: 32m
      mem_reservation: 8m
      environment:
          - "SYSCTL_KEY=vm.max_map_count"
          - "SYSCTL_VALUE=262144"
          - "KEEP_ALIVE=1"
  {{- end}}

  esapp:
    environment:
      VERSION_INFO: eeacms/esbootstrap:v2.0.14
      elastic_host: elastic
      AUTO_INDEXING: 'false'
      elastic_index: ${es_index_name}
      APP_CONFIG_DIRNAME: copernicus
      TZ: ${TZ}
      elastic_rwuser: ${RW_USER}
      elastic_rwpass: ${RW_PASSWORD}
      elastic_rouser: ${RO_USER}
      elastic_ropass: ${RO_PASSWORD}
      elastic_riverindex: copernicusriver
    ports:
      - '3000'
    labels:
      io.rancher.sidekicks: esbootstrap-data-config, autosync, rdfriver
      io.rancher.scheduler.affinity:host_label: ${host_labels_app}
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
    image: eeacms/esbootstrap:v2.0.14
    volumes_from:
      - esbootstrap-data-config
    links:
      - es-client:elastic

  autosync:
    environment:
      VERSION_INFO: eeacms/esbootstrap:v2.0.14
      elastic_host: elastic
      AUTO_INDEXING: 'false'
      SYNC_CRONTAB: ${es_sync_crontab}
      elastic_index: ${es_index_name}
      APP_CONFIG_DIRNAME: copernicus
      TZ: ${TZ}
      elastic_rwuser: ${RW_USER}
      elastic_rwpass: ${RW_PASSWORD}
      elastic_rouser: ${RO_USER}
      elastic_ropass: ${RO_PASSWORD}
      elastic_riverindex: copernicusriver
    labels:
      io.rancher.scheduler.affinity:host_label: ${host_labels_app}
      io.rancher.container.hostname_override: container_name
    image: eeacms/esbootstrap:v2.0.14
    volumes_from:
      - esbootstrap-data-config
    links:
    - es-client:elastic

  esbootstrap-data-config:
    image: eeacms/esbootstrap-configs:latest
    environment:
      - github_repo=https://github.com/eea/eea.esbootstrap.configs
      - DEV_ENV=false
      - TZ=${TZ}
      - APP_CONFIG_DIRNAME=copernicus
    volumes:
      - "/code/config"
    labels:
      io.rancher.container.start_once: 'true'
      io.rancher.scheduler.affinity:host_label: ${host_labels_app}
      io.rancher.container.hostname_override: container_name

  rdfriver:
    environment:
      VERSION_INFO: eeacms/rdfriver:2.0.2
      elastic_host: elastic
      TZ: ${TZ}
      elastic_user: ${RW_USER}
      elastic_pass: ${RW_PASSWORD}
      river_index: copernicusriver
      indexer_multithreading: 'false'
      threads: 2
    image: eeacms/rdfriver:2.0.2
    labels:
      io.rancher.scheduler.affinity:host_label: ${host_labels_app}
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
    links:
      - es-client:elastic


volumes:
  {{ .Values.VOLUME_PREFIX }}land_data:
    driver: rancher-nfs
    external: true
  {{ .Values.VOLUME_PREFIX }}land_downloads:
    driver: rancher-nfs
    external: true
  es-data:
    driver: ${VOLUME_DRIVER}
    {{- if eq .Values.VOLUME_EXTERNAL "yes"}}
    external: true
    {{- end}}
    {{- if .Values.VOLUME_DRIVER_OPTS}}
    driver_opts:
      {{.Values.VOLUME_DRIVER_OPTS}}
    {{- end}}
    per_container: true
