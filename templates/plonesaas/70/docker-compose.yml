version: '2'
services:
  plone:
    image: eeacms/plonesaas:5.2.0-7
    ports:
    - "8080"
    mem_reservation: ${MEM_LIMIT}
    mem_limit: ${MEM_LIMIT}
    labels:
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label_ne: ${HOST_LABELS}
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      eu.europa.saas.plone3: 'true'
    {{- if ne .Values.STAGING "yes"}}
    links:
    - postfix
    - memcached
    - zeo
    depends_on:
    - postfix
    - memcached
    - zeo
    volumes:
    - ${IMPORT_VOLUME_NAME}:/plone/imports
    - ${DUMP_VOLUME_NAME}:/plone/instance/var/ldapdump
    {{- end}}
    environment:
      ZEO_ADDRESS: zeo:8080
      ZOPE_MODE: "zeo_client"
      SENTRY_DSN: "${SENTRY_DSN}"
      SENTRY_SITE: "eionet.europa.eu"
      SENTRY_RELEASE: "5.2.0-7"
      TZ: ${TZ}

  zeo:
    image: eeacms/plonesaas:5.2.0-7
    mem_reservation: ${MEM_LIMIT}
    mem_limit: ${MEM_LIMIT}
    labels:
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label_ne: ${HOST_LABELS}
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      eu.europa.saas.zeo3: 'true'
    volumes:
    - ${DATA_VOLUME_NAME}:/data
    environment:
      ZOPE_MODE: "zeo"
      TZ: ${TZ}
    command:
    - zeo

  varnish:
    image: eeacms/varnish-plonesaas:0.7
    mem_reservation: 1g
    mem_limit: 1g
    ports:
    - "6081"
    - "6085"
    labels:
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label_ne: ${HOST_LABELS}
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      eu.europa.saas.varnish3: 'true'
    links:
    - haproxy
    depends_on:
    - haproxy
    environment:
      TZ: "${TZ}"
      BACKENDS: haproxy
      DASHBOARD_USER: "${DASHBOARD_USER}"
      DASHBOARD_PASSWORD: "${DASHBOARD_PASSWORD}"

  haproxy:
    image: eeacms/haproxy:1.8-1.3
    mem_limit: 128m
    mem_reservation: 128m
    ports:
    - "8080"
    - "1936"
    labels:
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label_ne: ${HOST_LABELS}
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      eu.europa.saas.haproxy3: 'true'
    links:
    - plone
    depends_on:
    - plone
    environment:
      STATS_AUTH: "${HAPROXY_AUTH}"
      FRONTEND_PORT: "8080"
      BACKENDS_PORT: "8080"
      BACKENDS: "plone"
      DNS_ENABLED: "true"
      INTER: "20s"
      DOWN_INTER: "5s"
      FAST_INTER: "15s"
      TIMEOUT_SERVER: "120s"
      TIMEOUT_CLIENT: "120s"
      TZ: "${TZ}"
      HTTPCHK: "HEAD /haproxycheck"

  postfix:
    {{- if eq .Values.STAGING "yes"}}
    image: eaudeweb/mailtrap:2.3
    ports:
    - "80"
    {{- else}}
    image: eeacms/postfix:2.10-3.3
    environment:
      MTP_HOST: ${POSTFIX_SERVER_NAME}
      MTP_RELAY: ${POSTFIX_RELAY}
      MTP_PORT: ${POSTFIX_PORT}
      MTP_PASS: ${POSTFIX_PASS}
      MTP_USER: ${POSTFIX_USER}
      TZ: ${TZ}
    {{- end}}
    mem_limit: 256m
    mem_reservation: 128m
    labels:
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label_ne: ${HOST_LABELS}
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      eu.europa.saas.postfix3: 'true'

  memcached:
    image: memcached:1.5.12
    mem_limit: 128m
    mem_reservation: 128m
    command:
    - "-m"
    - "2048"
    environment:
      TZ: ${TZ}
    labels:
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label_ne: ${HOST_LABELS}
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      eu.europa.saas.memcached3: 'true'

{{- if ne .Values.STAGING "yes"}}
  mediaserver:
    mem_limit: 128m
    mem_reservation: 128m
    image: eeacms/nginx-eionet-styles:1.5
    ports:
    - "8080"
    environment:
      LOGSPOUT: ignore
      TZ: "${TZ}"
    volumes:
    - ${STATIC_VOLUME_NAME}:/opt/zope/var/styles:ro
    labels:
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label_ne: ${HOST_LABELS}
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      eu.europa.saas.mediaserver3: 'true'
{{- end}}

  cron-mail-archive:
    mem_limit: 16777216
    image: alpine:3.8
    environment:
      LOGSPOUT: ignore
    mem_reservation: 16777216
    command:
    - wget
    - -O -
    - -nv
    - http://plone:8080/Eionet/cronjobs/update_archives?key=Thathoo0
    labels:
      io.rancher.container.start_once: 'true'
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label_ne: reserved=yes
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      eu.europa.saas.cron3: 'true'
      cron.schedule: 0 0 0 * * *


volumes:

  {{ .Values.DATA_VOLUME_NAME }}:
    driver: ${DATA_VOLUME_DRIVER}
    {{- if eq .Values.VOLUME_EXTERNAL "yes"}}
    external: true
    {{- end}}
    driver_opts:
      {{.Values.DATA_VOLUME_DRIVER_OPTS}}

{{- if ne .Values.STAGING "yes"}}

  {{ .Values.IMPORT_VOLUME_NAME }}:
    driver: ${DATA_VOLUME_DRIVER}
    {{- if eq .Values.VOLUME_EXTERNAL "yes"}}
    external: true
    {{- end}}
    driver_opts:
      {{.Values.DATA_VOLUME_DRIVER_OPTS}}

  {{ .Values.STATIC_VOLUME_NAME }}:
    {{- if eq .Values.VOLUME_EXTERNAL "yes"}}
    external: true
    {{- end}}
    driver: rancher-nfs

  {{ .Values.DUMP_VOLUME_NAME }}:
    driver: ${DATA_VOLUME_DRIVER}
    {{- if eq .Values.VOLUME_EXTERNAL "yes"}}
    external: true
    {{- end}}

{{- end}}
